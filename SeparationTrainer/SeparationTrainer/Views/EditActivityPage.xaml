<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:SeparationTrainer.Controls;assembly=SeparationTrainer"
             x:Class="SeparationTrainer.Views.EditActivityPage"
             x:Name="EditActivityContentPage"
             BackgroundColor="{DynamicResource Surface}"
             Title="Edit Activity">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Cancel" Command="{Binding CancelCommand}"/>
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <StackLayout Padding="15">

            <Label Text="Elapsed Time (hh:mm:ss)" />
            <StackLayout Spacing="0" 
                         HorizontalOptions="StartAndExpand"
                         Orientation="Horizontal">
                <!-- Hours Text -->
                <controls:AutoSelectEntry Text="{Binding HoursTextInput.Value, Mode=TwoWay}" MinimumWidthRequest="40" TextColor="{DynamicResource OnSurface}" Keyboard="Numeric" VerticalOptions="Center"/>
                <Label Text=":" VerticalOptions="Center"/>
                <!-- Minutes Text -->
                <controls:AutoSelectEntry Text="{Binding MinutesTextInput.Value}" MinimumWidthRequest="25" TextColor="{DynamicResource OnSurface}" Keyboard="Numeric" VerticalOptions="Center"/>
                <Label Text=":" VerticalOptions="Center"/>
                <!-- Seconds Text -->
                <controls:AutoSelectEntry Text="{Binding SecondsTextInput.Value}" MinimumWidthRequest="25" TextColor="{DynamicResource OnSurface}" Keyboard="Numeric" VerticalOptions="Center"/>
            </StackLayout>
            <!-- Hours Text Input Error -->
            <Label TextColor="{DynamicResource Error}" 
                   Text="{Binding HoursTextInput.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                   IsVisible="{Binding HoursTextInput.IsValid, Mode=OneWay, Converter={StaticResource InverseBoolConverter}}"/>
            <!-- Minutes Text Input Error -->
            <Label TextColor="{DynamicResource Error}" 
                   Text="{Binding MinutesTextInput.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                   IsVisible="{Binding MinutesTextInput.IsValid, Mode=OneWay, Converter={StaticResource InverseBoolConverter}}"/>
            <!-- Seconds Text Input Error -->
            <Label TextColor="{DynamicResource Error}" 
                   Text="{Binding SecondsTextInput.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                   IsVisible="{Binding SecondsTextInput.IsValid, Mode=OneWay, Converter={StaticResource InverseBoolConverter}}"/>

            <!-- Stress Level -->
            <StackLayout Orientation="Horizontal"
                         HorizontalOptions="Fill">
                <Label Text="Stress Level:" HorizontalOptions="Start" />
                <Label Text="{Binding SelectedStressLevel}" HorizontalOptions="End"/>
            </StackLayout>
            <controls:IntegerSlider MinimumTrackColor="{DynamicResource OnSurface}" 
                                    MaximumTrackColor="{DynamicResource OnSurface}"
                                    Maximum="7" 
                                    Minimum="1" 
                                    Value="{Binding ActivityToEdit.AnxietyLevel}" />

            <!-- Tags -->
            <Label Text="Tags"/>
            <StackLayout HorizontalOptions="StartAndExpand" 
                             Orientation="Horizontal"
                             HeightRequest="25">

                <!-- Applied Tags -->
                <StackLayout BindableLayout.ItemsSource="{Binding ActivityToEdit.Tags}" 
                             Orientation="Horizontal"
                             Spacing="2">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                            <controls:TagControl TagModel="{Binding TagModel}"
                                                 RemoveTagCommand="{Binding Source={x:Reference EditActivityContentPage}, Path=BindingContext.RemoveTagCommand}"/>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </StackLayout>

                <!-- Add New Tag -->
                <Button Text="New"
                        FontSize="Small"
                        HorizontalOptions="End"
                        Padding="0"
                        WidthRequest="50"
                        BackgroundColor="{DynamicResource Primary}"
                        TextColor="{DynamicResource OnPrimary}"
                        Command="{Binding AddNewTagCommand}"
                        BorderColor="{DynamicResource OnSurface}"
                        BorderWidth="0"
                        VerticalOptions="Center" />
            </StackLayout>

            <Label Text="Notes"/>
            <Editor Text="{Binding ActivityToEdit.Notes}" 
                    Placeholder="Add Notes Here"/>

            <Button Text="Save" Command="{Binding UpdateActivityCommand}" />
        </StackLayout>
    </ContentPage.Content>
</ContentPage>