<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:SeparationTrainer.Views"
       xmlns:helpers="clr-namespace:SeparationTrainer.Helpers;assembly=SeparationTrainer"
       Title="SeparationTrainer"
       x:Class="SeparationTrainer.AppShell"
       x:Name="TheAppShell"
       FlyoutBackgroundColor="{DynamicResource Surface}"
       BackgroundColor="{DynamicResource Surface}">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>

            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{DynamicResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{DynamicResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
                <Setter Property="Shell.FlyoutBackgroundColor" Value="{DynamicResource Surface}"/>
            </Style>

            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource OnPrimary}"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="BackgroundColor" Value="Black"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource Surface}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{DynamicResource OnSurface}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{DynamicResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <Shell.FlyoutHeader>
        <ContentView HeightRequest="100">
            <Grid>
                <Label Text="Separation Trainer" 
                       FontAttributes="Bold"
                       FontSize="Large"
                       HorizontalOptions="Center"
                       VerticalOptions="Center"
                       TextColor="{DynamicResource OnPrimary}"/>

                <StackLayout Orientation="Horizontal"
                             HorizontalOptions="End" 
                             VerticalOptions="End"
                             Margin="5"
                             Spacing="0">
                    <Label TextColor="{DynamicResource OnPrimary}" 
                           VerticalOptions="Center"
                           FontSize="20"
                           FontFamily="{DynamicResource MaterialFontFamily}"
                           Text="{x:Static helpers:IconFont.WeatherSunny}"/>

                    <Switch HorizontalOptions="End" 
                            VerticalOptions="End"
                            HeightRequest="25"
                            x:Name="ThemeToggleSwitch"
                            IsToggled="{Binding DarkThemeIsToggled, Source={x:Reference TheAppShell}}">
                    </Switch>

                    <Label TextColor="{DynamicResource OnPrimary}" 
                           VerticalOptions="Center"
                           FontSize="20"
                           FontFamily="{DynamicResource MaterialFontFamily}"
                           Text="{x:Static helpers:IconFont.WeatherNight}"/>
                </StackLayout>
            </Grid>
        </ContentView>
    </Shell.FlyoutHeader>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem Title="View Sessions">
        <ShellContent Route="ViewSessionsPage" ContentTemplate="{DataTemplate local:ViewSessionsPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Record Activity">
        <ShellContent Route="NewActivityPage" ContentTemplate="{DataTemplate local:NewActivityPage}" />
    </FlyoutItem>
    <FlyoutItem Title="View Statistics">
        <ShellContent Route="ViewStatisticsPage" ContentTemplate="{DataTemplate local:ViewStatisticsPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Settings">
        <ShellContent Route="UserSettingsPage" ContentTemplate="{DataTemplate local:UserSettingsPage}" />
    </FlyoutItem>

    <ShellContent Route="EditActivityPage" ContentTemplate="{DataTemplate local:EditActivityPage}"/>
    <ShellContent Route="NewManualActivityPage" ContentTemplate="{DataTemplate local:NewManualActivityPage}"/>
    <!--<FlyoutItem Title="View Activities">
        <ShellContent Route="ViewActivitiesPage" ContentTemplate="{DataTemplate local:ViewActivitiesPage}" />
    </FlyoutItem>-->

    <!--
        This defines content that won't show up in a flyout menu. When this content is active the flyout menu won't be available.
        This is useful for creating areas of the application where you don't want users to be able to navigate away from.
        If you would like to navigate to this content you can do so by calling
        await Shell.Current.GoToAsync("//LoginPage");
    -->

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
